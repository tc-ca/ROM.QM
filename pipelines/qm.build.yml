
trigger:
  branches:
    include:
    - development
  paths:
    exclude:
    - Pipelines/*

stages:
- stage: BuildAndPublishArtifact
  pool:
      vmImage: 'vs2017-win2016'
  jobs:
  - job: BuildAndPublishArtifact
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - task: Npm@1
      inputs:
        command: 'install'
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run build'
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'run test:unit'
    - task: CopyFiles@2
      inputs:
        Contents: 'dist/**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true
    - task: PublishBuildArtifacts@1
      inputs: 
        pathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
        ArtifactName: 'WebResources' # output artifact named www
- stage: UpdateWebResources
  jobs:
  - deployment: Deploy
    condition: succeeded()
    pool:
      vmImage: 'vs2017-win2016'
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - task: MSCRMToolInstaller@12
            inputs:
              nugetFeed: 'official'
              psFeed: 'official'
          - task: MSCRMPing@12
            inputs:
              crmConnectionString: '$(ConnectionString)'
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'WebResources'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "============================================"
                Write-Host "System.DefaultWorkingDirectory"
                Get-ChildItem -Path "$(System.DefaultWorkingDirectory)"
                Write-Host "============================================"
                Write-Host "Agent.BuildDirectory"
                Get-ChildItem -Path "$(Agent.BuildDirectory)"
                Write-Host "============================================"
                Write-Host ""
                Write-Host "============================================"
                Write-Host "System.ArtifactsDirectory"
                Get-ChildItem -Path "$(System.ArtifactsDirectory)"
                Write-Host "============================================"
                Write-Host "============================================"
                Write-Host "Build.BinariesDirectory"
                Get-ChildItem -Path "$(Build.BinariesDirectory)"
                Write-Host "============================================"
                Write-Host "============================================"
                Write-Host "Build.SourcesDirectory"
                Get-ChildItem -Path "$(Build.SourcesDirectory)"
                Write-Host "============================================"
              errorActionPreference: 'continue'
          - task: MSCRMGetLatestPatch@12
            name: GetLatestPatchTask
            inputs:
              crmConnectionString: '$(ConnectionString)'
              solutionName: '$(SolutionName)'
              existsVariableName: 'PatchExists'
              patchVariableName: 'LatestPatchName'
          - powershell: |
              Write-Host "##vso[task.setvariable variable=task.GetLatestPatchTask.PatchExists]$(PatchExists)"
              Write-Host "##vso[task.setvariable variable=task.GetLatestPatchTask.LatestPatchName]$(LatestPatchName)"
              Write-Host "Patch Exists =  $(PatchExists)"
              Write-Host "Latest Patch Name =  $(LatestPatchName)"
              Write-Host "${{ eq('$(PatchExists)', 'False') }}"
              Write-Host variables['task.GetLatestPatchTask.PatchExists']
          - task: MSCRMUpdateWebResource@12
            inputs:
              crmConnectionString: '$(ConnectionString)'
              webResourceDeploymentType: 'jsonMapping'
              webResourceFolderPath: '$(System.ArtifactsDirectory)\WebResources\dist'
              webResourceJsonMappingPath: '$(System.ArtifactsDirectory)\WebResources\dist\webresourceMapping.json'
              failIfWebResourceNotFound: false
              publish: true
              solutionName: '$(LatestPatchName)'
              crmConnectionTimeout: 360
          - task: MSCRMCopySolutionComponents@12
            inputs:
              crmConnectionString: '$(ConnectionString)'
              fromSolutionName: '$(QMSolutionName)'
              toSolutionName: '$(LatestPatchName)'